            

\continue of repetitions should be if 2x6x100 should say 12x100 swim as 6 of this 6 of that                         
\whereas normally it would be 1200 swim as 600 this 600 that                                                         
\-> going to modify continue tag to include antoher tag specifying whether it denotes a continual block of swimming  
\such as 1200meters or to just simplify repitition expressions from 2x6x100          

\simplify
\this could be done automatically 
\-->not defined show as not simplified

\--> it is defined
\-> true ->check if it is possible -> use assertion to check 

\-> false -> show as a continous swim not simplified
\gonna change this to an attribute

\xslt now does multi level repetitions but doesnt work when there are more than one base instruction within the repetition

\xsd assertion needed --> all instructions in a continue must be of type Distance or laps 
\and they must all be the same type 
need to check whether this needs to be thing or not 

\assertion for stroke inheritance -->
\need to check for multiple continues or repetitions at the start as neither will have strokes defined 
\-> maybe check for instructions with no other tag (rep or cont)
now i gotta do the python and xslt for this so that it actually inherits it -> xslt is mostly done

\problem with inheriting in a non-simplifying continue is that it breaks the length calculations
\could be fixed by checking for ancestor-or-self length instead of just self 
continues in repetitions have error when calculating totals --> too many

\also need to repeat the stroke check for other possible points (rest, intenisty)
\so that this can replace intensity across 

missing 2 at the bottom of the fibonacci section in the book

breaths -- add bilateral as an option 

continues and repitions recurring -> maybe switch symbols side    

could use some text recognition library so people can take photos of sets and --> into swiML     
                                                           